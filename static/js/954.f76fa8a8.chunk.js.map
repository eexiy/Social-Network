{"version":3,"file":"static/js/954.f76fa8a8.chunk.js","mappings":"2NAmCA,EAjCuB,SAACA,GAMpB,OACI,SAAC,KAAD,CACIC,cAAe,CACXC,eAAgB,IAEpBC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WATT,SAACD,GACjBJ,EAAMM,YAAYF,EACrB,CAQWG,CAAcH,EAAOF,gBACrBG,EAAU,CAAED,OAAQ,IACvB,EAPL,SAUK,kBACG,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CACII,KAAM,iBACNC,GAAI,WACJC,YAAa,kBAIrB,mBAAQC,KAAM,SAAd,oBAVP,GAeZ,ECjCD,GAAgB,QAAU,0BCA1B,EAA0B,yBCU1B,EARgB,SAACX,GACb,OACI,gBAAKY,UAAWC,EAAhB,SACKb,EAAMc,SAGlB,ECRD,EAAuB,mB,UCevB,EAXa,SAACd,GAEV,IAAIe,EAAO,aAAef,EAAMgB,GAEhC,OACI,gBAAKJ,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASI,GAAIF,EAAb,SAAoBf,EAAMQ,QAGrC,ECaD,EApBgB,SAACR,GAEb,IAAIkB,EAAQlB,EAAMmB,YAEZC,EAAeF,EAAMG,UAAUC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAMf,KAAMe,EAAKf,KAAoBQ,GAAIO,EAAKP,IAAlBO,EAAKP,GAArC,IACvCQ,EAAkBN,EAAMO,aAAaH,KAAI,SAAAR,GAAO,OAAI,SAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQE,GAA1B,IAEtD,OACI,iBAAKJ,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,SACKO,KAEL,gBAAKR,UAAWC,EAAAA,SAAhB,SACKW,KAEL,SAAC,EAAD,CAAgBlB,YAAaN,EAAMM,gBAG9C,ECKD,GAFyBoB,EAAAA,EAAAA,KAtBD,SAACR,GACrB,MAAO,CACHC,YAAaD,EAAMC,YACnBQ,OAAQT,EAAMU,KAAKD,OAE1B,IAE0B,SAACE,GACxB,MAAO,CACHvB,YAAa,SAACJ,GACV2B,GAASC,EAAAA,EAAAA,GAAwB5B,GACpC,EAER,GASwBwB,EAPQ,SAAC1B,GAC9B,IAAM+B,GAAWC,EAAAA,EAAAA,MAIjB,OAHAC,EAAAA,EAAAA,YAAU,WACN,IAAKjC,EAAM2B,OAAQ,OAAOI,EAAS,SACtC,KACM,SAAC,GAAD,UAAa/B,GACvB,G","sources":["components/Dialogs/AddMessageForm.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/User/User.module.css?cd91","components/Dialogs/User/User.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { Field, Form, Formik } from \"formik\";\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newMessageText: \"\"\r\n            }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                addNewMessage(values.newMessageText);\r\n                resetForm({ values: '' });\r\n            }\r\n            }\r\n        >\r\n            {() => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            name={'newMessageText'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type={'submit'}>Send</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\nexport default AddMessageForm","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Kn3eS\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__5L+JP\"};","import s from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__6Y3RS\",\"active\":\"User_active__e++v+\"};","import s from './User.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    let path = '/messages/' + props.id\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import AddMessageForm from './AddMessageForm';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport User from './User/User';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    const usersElement = state.usersData.map(user => <User name={user.name} key={user.id} id={user.id} />)\r\n    const messagesElement = state.messagesData.map(message => <Message key={message.id} message={message.message} />)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.users}>\r\n                {usersElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <AddMessageForm sendMessage={props.sendMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsRedirectComponent = (props) => {\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (!props.isAuth) return navigate('/login')\r\n    })\r\n    return <Dialogs {...props}  />\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsRedirectComponent)\r\n\r\nexport default DialogsContainer"],"names":["props","initialValues","newMessageText","onSubmit","values","resetForm","sendMessage","addNewMessage","name","as","placeholder","type","className","s","message","path","id","to","state","dialogsPage","usersElement","usersData","map","user","messagesElement","messagesData","connect","isAuth","auth","dispatch","addMessageActionCreator","navigate","useNavigate","useEffect"],"sourceRoot":""}