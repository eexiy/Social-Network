{"version":3,"file":"static/js/146.da88c5f5.chunk.js","mappings":"gPACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAwG,uBAAxG,EAA6I,6B,mBCqC7I,EAlCoB,SAACA,GAMjB,OACI,SAAC,KAAD,CACIC,cAAe,CACXC,YAAa,IAEjBC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACjBC,QAAQC,IAAIH,EAAOF,aAVd,SAACE,GACdJ,EAAMQ,SAASJ,EAClB,CASWK,CAAWL,EAAOF,aAClBG,EAAU,CAAED,OAAQ,IACvB,EARL,SAWK,kBACG,SAAC,KAAD,WACI,iBAAKM,UAAWC,EAAhB,WACI,SAAC,KAAD,CACIC,KAAM,cACNC,GAAI,WACJC,YAAa,gBAEjB,mBAAQC,KAAM,SAAd,UAAwB,SAAC,MAAD,UARnC,GAeZ,ECpCD,EAAuB,mBAAvB,EAAiD,mB,UCkBjD,EAhBa,SAACf,GACV,OACI,iBAAKU,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKK,IAAKC,EAAWC,IAAI,MACzB,yBACKlB,EAAMmB,cAGf,4BACI,mCADJ,IACuBnB,EAAMoB,WAIxC,ECcD,EAxBgBC,EAAAA,MAAW,SAAArB,GAEvB,IAAMsB,EAAetB,EAAMuB,UAAUC,KAAI,SAAAC,GAAI,OACzC,SAAC,EAAD,CACIN,QAASM,EAAKA,KAEdL,MAAOK,EAAKL,OADPK,EAAKC,GAH2B,IAO7C,OACI,gBAAKhB,UAAWC,EAAhB,UACI,4BACI,eAAID,UAAWC,EAAf,uBACA,0BACI,SAAC,EAAD,CAAaH,SAAUR,EAAMQ,cAEjC,gBAAKE,UAAWC,EAAhB,SACKW,QAKpB,ICPD,GAFyBK,EAAAA,EAAAA,KAfD,SAACC,GACrB,MAAO,CACHL,UAAWK,EAAMC,YAAYN,UAEpC,IAE0B,SAACO,GACxB,MAAO,CACHtB,SAAU,SAACN,GACP4B,GAASC,EAAAA,EAAAA,IAAqB7B,GACjC,EAGR,GAEwByB,CAA6CK,GCnBtE,GAAgB,QAAU,0B,gBCA1B,EAA8B,iCAA9B,EAA6E,iCAA7E,EAAiI,sCAAjI,EAA0L,sCAA1L,EAA8O,iCAA9O,EAA+R,mCAA/R,EAAuV,wCCAvV,EAA8B,iCAA9B,EAAiF,qCAAjF,EAAwI,qCAAxI,EAAoM,0CAApM,EAAgQ,qCAAhQ,EAA0T,wCAA1T,EAAyX,0CAAzX,EAAyb,yCAAzb,EAAwf,yCAAxf,EAAyjB,2CAAzjB,EAA6nB,4CAA7nB,EAAorB,8BAAprB,EAA4uB,6CAA5uB,EAAmyB,6BAAnyB,EAA00B,6BAA10B,EAAw3B,oCAAx3B,EAAw6B,+BAAx6B,EAA89B,0CCmD99B,EAhD+B,SAAChC,GAE7B,OAA8BiC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASjC,EAAMoC,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACPD,EAAUrC,EAAMoC,OAClB,GAAE,CAACpC,EAAMoC,SAgBV,OACG,iCACKF,IACC,0BACG,iBAAMxB,UAAWC,EAAiB4B,cAjBrB,WACtBJ,GAAY,EACd,EAeW,SACInC,EAAMoC,WAKfF,IACE,gBAAKxB,UAAWC,EAAhB,UACG,kBACG6B,WAAW,EACXC,OAvBY,WACxBN,GAAY,GACZnC,EAAM0C,aAAaN,EACrB,EAqBcO,SAnBQ,SAACC,GACrBP,EAAUO,EAAEC,cAAcC,MAC5B,EAkBcA,MAAOV,QAMxB,ECbD,GAjCoB,SAACpC,GAEjB,OACI,iBAAKU,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAAmCX,EAAM+C,QAAQC,YACjD,0BACI,SAACC,EAAD,CACIb,OAAQpC,EAAMoC,OACdW,QAAS/C,EAAM+C,QACfL,aAAc1C,EAAM0C,iBAI3B1C,EAAMkD,UAAW,mBAAQxC,UAAWC,EAAkBwC,QAASnD,EAAMoD,iBAApD,2BAElB,iBAAK1C,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gDACA,0BAAOX,EAAM+C,QAAQM,eAAiB,MAAQ,WAElD,iBAAK3C,UAAWC,EAAhB,WACI,kDACA,0BAAOX,EAAM+C,QAAQO,gCAEzB,iBAAK5C,UAAWC,EAAhB,WACI,uCACA,0BAAOX,EAAM+C,QAAQQ,kBAKxC,EC2ED,GAtGwB,SAACvD,GAErB,MAUUA,EAAMC,cAVhB,IAAQ+C,SAAAA,OAAR,MAAmB,GAAnB,MAAuBK,eAAAA,OAAvB,aAA+CC,0BAAAA,OAA/C,MAA2E,GAA3E,MAA+EC,QAAAA,OAA/E,MAAyF,GAAzF,MACIC,SAAAA,OADJ,MACe,CACPC,SAAU,KACVC,UAAW,KACXC,QAAS,KACTC,GAAI,KACJC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,SAAU,MATlB,EAYMC,GAAkBC,EAAAA,EAAAA,UAClBC,EAAc,SAACC,GACjBH,EAAgBI,QAAQC,OAC3B,EAED,OACI,gBAAK5D,UAAWC,EAAhB,UACI,SAAC,KAAD,CAAQ4D,oBAAoB,EACxBtE,cAAe,CAAE+C,SAAAA,EAAUK,eAAAA,EAAgBC,0BAAAA,EAA2BC,QAAAA,EAASC,SAAAA,GAC/ErD,SAAU,SAACC,GACPJ,EAAMwE,gBAAgBpE,GACtBJ,EAAMmC,aAAY,EACrB,EALL,SAOK,kBACG,UAAC,KAAD,YACI,eAAIzB,UAAWC,EAAf,+BACA,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC,KAAD,CACIC,KAAM,WACNG,KAAM,UAEV,qBACA,kBAAO0D,QAAQ,GAAf,2BAEJ,iBAAK/D,UAAWC,EAAhB,WACI,SAAC,KAAD,CACIC,KAAM,+BAEV,qBACA,kBAAO6D,QAAQ,GAAf,wCAGJ,iBAAK/D,UAAWC,EAAhB,WACI,SAAC,KAAD,CACIC,KAAM,aAEV,qBACA,kBAAO6D,QAAQ,GAAf,0BAEJ,iBAAK/D,UAAWC,EAAhB,WACI,SAAC,KAAD,CACIC,KAAM,iBACNG,KAAM,WACNW,GAAG,oBACP,mBAAO+C,QAAS,iBAAhB,WACI,8CADJ,WAIJ,0BACI,oBAAQ/D,UAAWC,EAAWwC,QAASgB,EAAvC,WACI,kBACIO,MAAO,CAAEC,QAAS,QAClBC,IAAKX,EACLlD,KAAK,OACL4B,SAAU3C,EAAM6E,sBALxB,0BAYR,gBAAKnE,UAAWC,EAAhB,SAEQmE,OAAOC,KAAK/E,EAAM+C,QAAQS,UAAUhC,KAAI,SAAAwD,GACpC,OAAO,iBAAetE,UAAWC,EAA1B,WACH,SAAC,KAAD,CACIC,KAAI,mBAAcoE,MAEtB,qBACA,kBAAOP,QAAQ,GAAf,SAAmBO,KACnB,SAAC,KAAD,CAAcpE,KAAI,mBAAcoE,GAAOC,UAAU,UANpCD,EAQpB,UAIb,mBAAQtE,UAAWC,EAAWI,KAAK,SAAnC,mBACA,mBAAQoC,QAASnD,EAAMkF,mBAAoBxE,UAAWC,EAAtD,sBAlEP,KAwEhB,E,gCC/DD,GA/BgB,SAAC,GAAkB,IAAhB6C,EAAe,EAAfA,SACf,OACI,iBAAK9C,UAAWC,EAAhB,WACI,SAAC,MAAD,CAASD,UAAWC,EAAewE,GAAE,YAAO3B,EAASC,UAAY2B,OAAO,SAAxE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASO,QAAUqB,OAAO,SAAtE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASE,WAAa0B,OAAO,SAAzE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASQ,UAAYoB,OAAO,SAAxE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASG,SAAWyB,OAAO,SAAvE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASI,IAAMwB,OAAO,SAAlE,UACI,SAAC,OAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASM,SAAWsB,OAAO,SAAvE,UACI,SAAC,MAAD,OAEJ,SAAC,MAAD,CAAS1E,UAAWC,EAAewE,GAAE,YAAO3B,EAASK,SAAWuB,OAAO,SAAvE,UACI,SAAC,OAAD,QAIf,ECUD,GA5CoB,SAACpF,GAEjB,OAAgCiC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEA,IAAKnC,EAAM+C,QACP,OAAO,SAACsC,EAAA,EAAD,IASX,OACI,iBAAK3E,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAoBK,IAAKhB,EAAM+C,QAAQuC,OAAOC,OAAStE,EAAWC,IAAI,MACtF,SAAC,GAAD,CAASsC,SAAUxD,EAAM+C,QAAQS,eAErC,4BACI,SAAC,GAAD,CACIJ,iBAAkB,kBAAMjB,GAAY,EAAlB,EAClBe,QAASlD,EAAMkD,QACfH,QAAS/C,EAAM+C,QACfX,OAAQpC,EAAMoC,OACdM,aAAc1C,EAAM0C,eAEvBR,IAAY,SAAC,GAAD,CACTC,YAAaA,EACbqC,gBAAiBxE,EAAMwE,gBACvBvE,cAAeD,EAAM+C,QACrBA,QAAS/C,EAAM+C,QACfG,QAASlD,EAAMkD,QACf2B,oBA1BY,SAACT,GACrBA,EAAMgB,OAAOI,MAAMC,QACnBzF,EAAM0F,UAAUtB,EAAMgB,OAAOI,MAAM,GAE1C,EAuBeN,mBAAoB,kBAAM/C,GAAY,EAAlB,SAMvC,EC5BD,GAhBgB,SAACnC,GACb,OACI,iBAAKU,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,QAAhB,UACI,SAAC,GAAD,CAAaoC,QAAS/C,EAAM+C,QACxBX,OAAQpC,EAAMoC,OACdc,QAASlD,EAAMkD,QACfR,aAAc1C,EAAM0C,aACpB8B,gBAAiBxE,EAAMwE,gBACvBkB,UAAW1F,EAAM0F,eAEzB,SAAC,EAAD,MAGX,E,sBCXKC,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAEF,WAAY3F,GAAQ,IAAD,yBACf,cAAMA,IACD4B,MAAQ,CACTgE,iBAAiB,GAHN,CAKlB,CAoEA,OApEA,yCAED,WAEI,IAAIC,GAAkBC,KAAK9F,MAAM+F,OAAOC,OAAOC,OAC3CC,EAAmBJ,KAAK9F,MAAMkG,iBAE9BL,GACAC,KAAK9F,MAAMmG,eAAeN,GAC1BC,KAAK9F,MAAMoG,UAAUP,IAIjBC,KAAK9F,MAAMqG,SACXP,KAAK9F,MAAMmG,eAAeD,GAC1BJ,KAAK9F,MAAMoG,UAAUF,GAGhC,mCAED,SAAmBI,EAAWC,EAAWC,GAErC,IAAIX,GAAkBC,KAAK9F,MAAM+F,OAAOC,OAAOC,OAC3CC,EAAmBJ,KAAK9F,MAAMkG,iBACZJ,KAAKlE,MAAMgE,kBAIzBC,IAAmBK,GACnBJ,KAAKW,SAAS,CAAEb,iBAAiB,KAGhCC,GAAkBC,KAAK9F,MAAMqG,SAC9BP,KAAK9F,MAAMmG,eAAeD,GAC1BJ,KAAK9F,MAAMoG,UAAUF,GACrBJ,KAAKW,SAAS,CAAEb,iBAAiB,KAG5C,uBAED,WAEI,IAAKE,KAAK9F,MAAMqG,SAAWP,KAAK9F,MAAM+F,OAAOC,OAAOC,OAChD,OAAO,SAAC,MAAD,CAAUd,GAAI,WAGzB,IAAIU,GAAkBC,KAAK9F,MAAM+F,OAAOC,OAAOC,OAC3CC,EAAmBJ,KAAK9F,MAAMkG,iBAE9BhD,GAAU,EAOd,QANK2C,GAAkBC,KAAK9F,MAAMqG,QAEvBR,IAAmBK,KAD1BhD,GAAU,IAMV,0BACI,SAAC,GAAD,CACIH,QAAS+C,KAAK9F,MAAM+C,QACpBX,OAAQ0D,KAAK9F,MAAMoC,OACnBM,aAAcoD,KAAK9F,MAAM0C,aACzBQ,QAASA,EACTwC,UAAWI,KAAK9F,MAAM0F,UACtBlB,gBAAiBsB,KAAK9F,MAAMwE,mBAI3C,OA3ECmB,CAAyBtE,EAAAA,WA+F/B,IAaA,IANgCqF,EAAAA,GAAAA,KAvBhC,SAAoBC,GAWhB,OATA,SAAiC3G,GAC7B,IAAI4G,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MACXf,GAASgB,EAAAA,GAAAA,MAEb,OAAO,SAACL,GAAD,kBACC3G,GADD,IAEH+F,OAAQ,CAAEa,SAAAA,EAAUE,SAAAA,EAAUd,OAAAA,KACrC,CAEJ,IAaGrE,EAAAA,EAAAA,KAToB,SAACC,GAAD,MAAY,CAChCmB,QAASnB,EAAMC,YAAYkB,QAC3BX,OAAQR,EAAMC,YAAYO,OAC1B8D,iBAAkBtE,EAAMqF,KAAKvF,GAC7B2E,OAAQzE,EAAMqF,KAAKZ,OAJC,GAUhB,CAAEF,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW1D,aAAAA,EAAAA,GAAcgD,UAAAA,EAAAA,GAAWlB,gBAAAA,EAAAA,KAH9BkC,CAI9Bf,G","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/AddPostForm.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileData/ProfileData.module.css?ce4d","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/Contact.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__S2bry\",\"myPostsTitle\":\"MyPosts_myPostsTitle__8mf1r\",\"posts\":\"MyPosts_posts__7wkCs\",\"myPostField\":\"MyPosts_myPostField__6V79J\"};","import { Field, Form, Formik } from \"formik\";\r\nimport s from './MyPosts.module.css'\r\nimport {AiOutlineSend} from 'react-icons/ai'\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    let addNewPost = (values) => {\r\n        props.sendPost(values);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newPostText: \"\"\r\n            }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                console.log(values.newPostText);\r\n                addNewPost(values.newPostText);\r\n                resetForm({ values: '' });\r\n            }\r\n            }\r\n        >\r\n            {() => (\r\n                <Form>\r\n                    <div className={s.myPostField}>\r\n                        <Field\r\n                            name={'newPostText'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}\r\n                        />\r\n                        <button type={'submit'}><AiOutlineSend /></button>\r\n                    </div>\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\nexport default AddPostForm","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__QLrUw\",\"post\":\"Post_post__13fVx\"};","import s from './Post.module.css'\r\nimport userPhoto from '../../../../assets/images/avaLogo.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.post}>\r\n                <img src={userPhoto} alt=\"\" />\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span>Like</span> {props.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport AddPostForm from './AddPostForm';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    const postsElement = props.postsData.map(post =>\r\n        <Post\r\n            message={post.post}\r\n            key={post.id}\r\n            likes={post.likes}\r\n        />)\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div>\r\n                <h3 className={s.myPostsTitle}>My Posts</h3>\r\n                <div>\r\n                    <AddPostForm sendPost={props.sendPost} />\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElement}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__aS6AO\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__BFdQ+\",\"profileLeft\":\"ProfileInfo_profileLeft__2fE3T\",\"profile__infoAva\":\"ProfileInfo_profile__infoAva__kHeqU\",\"profile__contact\":\"ProfileInfo_profile__contact__9goMH\",\"contactIcon\":\"ProfileInfo_contactIcon__zwFEh\",\"profileStatus\":\"ProfileInfo_profileStatus__DXsA9\",\"profileStatusInput\":\"ProfileInfo_profileStatusInput__Jinrr\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileData\":\"ProfileData_profileData__WbPuq\",\"profileDataName\":\"ProfileData_profileDataName__wA7DD\",\"profileDataList\":\"ProfileData_profileDataList__gkIwU\",\"profileDataListTitle\":\"ProfileData_profileDataListTitle__DEhVv\",\"profileDataForm\":\"ProfileData_profileDataForm__K3T8H\",\"profileDataFormInf\":\"ProfileData_profileDataFormInf__91tcv\",\"profileDataFormTitle\":\"ProfileData_profileDataFormTitle__7+aAE\",\"profileDataFormLeft\":\"ProfileData_profileDataFormLeft__19MaN\",\"profileDataFormName\":\"ProfileData_profileDataFormName__T5LIS\",\"profileDataFormSkills\":\"ProfileData_profileDataFormSkills__H2ybG\",\"profileDataFormAboutMe\":\"ProfileData_profileDataFormAboutMe__Sn-Sr\",\"contacts\":\"ProfileData_contacts__iw-H-\",\"profileDataFormCheckBox\":\"ProfileData_profileDataFormCheckBox__im9yC\",\"btnFile\":\"ProfileData_btnFile__zrW20\",\"btnSave\":\"ProfileData_btnSave__LlY7m\",\"profileDataBtn\":\"ProfileData_profileDataBtn__NQj5T\",\"btnCancel\":\"ProfileData_btnCancel__-tbtr\",\"profileDataFormRight\":\"ProfileData_profileDataFormRight__jLqQd\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   }\r\n\r\n   const deActivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         {!editMode &&\r\n            <div>\r\n               <span className={s.profileStatus} onDoubleClick={activateEditMode}>\r\n                  {props.status}\r\n               </span>\r\n            </div>\r\n         }\r\n\r\n         {editMode &&\r\n            <div className={s.profileStatusInput}>\r\n               <input\r\n                  autoFocus={true}\r\n                  onBlur={deActivateEditMode}\r\n                  onChange={onStatusChange}\r\n                  value={status}\r\n               />\r\n            </div>\r\n         }\r\n      </>\r\n   );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import s from './ProfileData.module.css'\r\nimport ProfileStatus from '../ProfileStatus'\r\n\r\nconst ProfileData = (props) => {\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            <h1 className={s.profileDataName}>{props.profile.fullName}</h1>\r\n            <div>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    profile={props.profile}\r\n                    updateStatus={props.updateStatus}\r\n                />\r\n            </div>\r\n            \r\n            {props.isOwner && <button className={s.profileDataBtn} onClick={props.activateEditMode}>Edit profile</button>}\r\n\r\n            <div className={s.profileDataList}>\r\n                <div className={s.profileDataListTitle}>\r\n                    <h4>Looking for a job:</h4>\r\n                    <span>{props.profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n                </div>\r\n                <div className={s.profileDataListTitle}>\r\n                    <h4>Professional skills:</h4>\r\n                    <span>{props.profile.lookingForAJobDescription}</span>\r\n                </div>\r\n                <div className={s.profileDataListTitle}>\r\n                    <h4>About Me:</h4>\r\n                    <span>{props.profile.aboutMe}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData","import { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport { useRef } from 'react';\r\nimport s from './ProfileData.module.css'\r\n\r\n\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    const { fullName = '', lookingForAJob = false, lookingForAJobDescription = '', aboutMe = '',\r\n        contacts = {\r\n            facebook: null,\r\n            instagram: null,\r\n            twitter: null,\r\n            vk: null,\r\n            website: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null,\r\n        } } = props.initialValues\r\n\r\n    const hiddenFileInput = useRef()\r\n    const handleClick = (event) => {\r\n        hiddenFileInput.current.click();\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileDataForm}>\r\n            <Formik enableReinitialize={true}\r\n                initialValues={{ fullName, lookingForAJob, lookingForAJobDescription, aboutMe, contacts }}\r\n                onSubmit={(values) => {\r\n                    props.saveProfileInfo(values)\r\n                    props.setEditMode(false)\r\n                }}\r\n            >\r\n                {() => (\r\n                    <Form>\r\n                        <h2 className={s.profileDataFormTitle}>Edit information</h2>\r\n                        <div className={s.profileDataFormInf}>\r\n                            <div className={s.profileDataFormLeft}>\r\n                                <div className={s.profileDataFormName}>\r\n                                    <Field\r\n                                        name={'fullName'}\r\n                                        type={'text'}\r\n                                    />\r\n                                    <span></span>\r\n                                    <label htmlFor=\"\">Full name</label>\r\n                                </div>\r\n                                <div className={s.profileDataFormSkills}>\r\n                                    <Field\r\n                                        name={'lookingForAJobDescription'}\r\n                                    />\r\n                                    <span></span>\r\n                                    <label htmlFor=\"\">My professional skills</label>\r\n\r\n                                </div>\r\n                                <div className={s.profileDataFormAboutMe}>\r\n                                    <Field\r\n                                        name={'aboutMe'}\r\n                                    />\r\n                                    <span></span>\r\n                                    <label htmlFor=\"\">About me</label>\r\n                                </div>\r\n                                <div className={s.profileDataFormCheckBox}>\r\n                                    <Field\r\n                                        name={'lookingForAJob'}\r\n                                        type={'checkbox'}\r\n                                        id='lookingForAJob' />\r\n                                    <label htmlFor={'lookingForAJob'}>\r\n                                        <b> Looking for a job</b> </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <button className={s.btnFile} onClick={handleClick}>\r\n                                        <input\r\n                                            style={{ display: 'none' }}\r\n                                            ref={hiddenFileInput}\r\n                                            type=\"file\"\r\n                                            onChange={props.onMainPhotoSelected}\r\n                                        />\r\n                                        Choose a photo\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className={s.profileDataFormRight}>\r\n                                {\r\n                                    Object.keys(props.profile.contacts).map(key => {\r\n                                        return <div key={key} className={s.contacts}>\r\n                                            <Field\r\n                                                name={`contacts.${key}`}\r\n                                            />\r\n                                            <span></span>\r\n                                            <label htmlFor=\"\">{key}</label>\r\n                                            <ErrorMessage name={`contacts.${key}`} component=\"div\" />\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <button className={s.btnSave} type='submit'>Save</button>\r\n                        <button onClick={props.deactivateEditMode} className={s.btnCancel}>Cancel</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDataForm","import s from './ProfileInfo.module.css'\r\nimport {\r\n    AiOutlineFacebook,\r\n    AiOutlineGithub,\r\n    AiOutlineInstagram,\r\n    AiOutlineLink,\r\n    AiOutlineTwitter,\r\n    AiOutlineYoutube\r\n} from 'react-icons/ai'\r\nimport { SlSocialVkontakte } from 'react-icons/sl'\r\nimport { TfiWorld } from 'react-icons/tfi'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Contact = ({ contacts }) => {\r\n    return (\r\n        <div className={s.profile__contact} >\r\n            <NavLink className={s.contactIcon} to={`//${contacts.facebook}`} target=\"_blank\">\r\n                <AiOutlineFacebook />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.github}`} target=\"_blank\">\r\n                <AiOutlineGithub />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.instagram}`} target=\"_blank\">\r\n                <AiOutlineInstagram />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.mainLink}`} target=\"_blank\">\r\n                <AiOutlineLink />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.twitter}`} target=\"_blank\">\r\n                <AiOutlineTwitter />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.vk}`} target=\"_blank\">\r\n                <SlSocialVkontakte />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.youtube}`} target=\"_blank\">\r\n                <AiOutlineYoutube />\r\n            </NavLink>\r\n            <NavLink className={s.contactIcon} to={`//${contacts.website}`} target=\"_blank\">\r\n                <TfiWorld />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import Preloader from '../../../common/Preloader/Preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport userPhoto from '../../../assets/images/avaLogo.jpg'\r\nimport ProfileData from './ProfileData/ProfileData'\r\nimport { useState } from 'react'\r\nimport ProfileDataForm from './ProfileData/ProfileDataForm'\r\nimport Contact from './Contact'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (event) => {\r\n        if (event.target.files.length) {\r\n            props.savePhoto(event.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.profileLeft}>\r\n                <img className={s.profile__infoAva} src={props.profile.photos.large || userPhoto} alt=\"\" />\r\n                <Contact contacts={props.profile.contacts} />\r\n            </div>\r\n            <div>\r\n                <ProfileData\r\n                    activateEditMode={() => setEditMode(true)}\r\n                    isOwner={props.isOwner}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                />\r\n                {editMode && <ProfileDataForm\r\n                    setEditMode={setEditMode}\r\n                    saveProfileInfo={props.saveProfileInfo}\r\n                    initialValues={props.profile}\r\n                    profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                    onMainPhotoSelected={onMainPhotoSelected}\r\n                    deactivateEditMode={() => setEditMode(false)}\r\n                />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.profile}>\r\n                <ProfileInfo profile={props.profile}\r\n                    status={props.status}\r\n                    isOwner={props.isOwner}\r\n                    updateStatus={props.updateStatus}\r\n                    saveProfileInfo={props.saveProfileInfo}\r\n                    savePhoto={props.savePhoto} />\r\n            </div>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, savePhoto, updateStatus, saveProfileInfo } from '../../redux/profileReducer'\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\r\nimport { compose } from 'redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowMyProfile: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorizedUserId = this.props.authorizedUserId;\r\n\r\n        if (userIdFromPath) {\r\n            this.props.getUserProfile(userIdFromPath);\r\n            this.props.getStatus(userIdFromPath);\r\n\r\n        } else {\r\n\r\n            if (this.props.isAuth) {\r\n                this.props.getUserProfile(authorizedUserId);\r\n                this.props.getStatus(authorizedUserId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorizedUserId = this.props.authorizedUserId;\r\n        let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n        if (isShowMyProfile) {\r\n\r\n            if (userIdFromPath === authorizedUserId) {\r\n                this.setState({ isShowMyProfile: false })\r\n            }\r\n\r\n            if (!userIdFromPath && this.props.isAuth) {\r\n                this.props.getUserProfile(authorizedUserId);\r\n                this.props.getStatus(authorizedUserId);\r\n                this.setState({ isShowMyProfile: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n\r\n        let userIdFromPath = +this.props.router.params.userId;\r\n        let authorizedUserId = this.props.authorizedUserId;\r\n\r\n        let isOwner = false;\r\n        if (!userIdFromPath && this.props.isAuth) {\r\n            isOwner = true;\r\n        } else if (userIdFromPath === authorizedUserId) {\r\n            isOwner = true;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    isOwner={isOwner}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfileInfo={this.props.saveProfileInfo}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction withRouter(Component) {\r\n\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return <Component\r\n            {...props}\r\n            router={{ location, navigate, params }} />;\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst ProfileContainerCompose = compose(\r\n    withRouter,\r\n    connect(mapStateToProps,\r\n        { getUserProfile, getStatus, updateStatus, savePhoto, saveProfileInfo })\r\n)(ProfileContainer)\r\n\r\nexport default ProfileContainerCompose;"],"names":["props","initialValues","newPostText","onSubmit","values","resetForm","console","log","sendPost","addNewPost","className","s","name","as","placeholder","type","src","userPhoto","alt","message","likes","React","postsElement","postsData","map","post","id","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","fullName","ProfileStatus","isOwner","onClick","activateEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","instagram","twitter","vk","website","youtube","github","mainLink","hiddenFileInput","useRef","handleClick","event","current","click","enableReinitialize","saveProfileInfo","htmlFor","style","display","ref","onMainPhotoSelected","Object","keys","key","component","deactivateEditMode","to","target","Preloader","photos","large","files","length","savePhoto","ProfileContainer","isShowMyProfile","userIdFromPath","this","router","params","userId","authorizedUserId","getUserProfile","getStatus","isAuth","prevProps","prevState","snapshot","setState","compose","Component","location","useLocation","navigate","useNavigate","useParams","auth"],"sourceRoot":""}